/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestbank;

import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;


/**
 *
 * @author root
 */
public class Administration extends javax.swing.JFrame {

    
    String poste;
    Connexion conn = new Connexion();
    Statement stat;
    ResultSet resp;
    DefaultTableModel model = new DefaultTableModel();
    public Administration() {
         initComponents();
         
        model.addColumn("Id");
        model.addColumn("Nom et Prénoms");
        model.addColumn("Login");
        model.addColumn("Poste");
        model.addColumn("Téléphone");
         try {

                String requete = "select *  from Employe";
                stat = conn.ObtenirConnexion().createStatement();
                resp = stat.executeQuery(requete);
                while (resp.next()) {
                   model.addRow(new Object[]{resp.getString("Id_employe"), resp.getString("Nom_employe"), resp.getString("Login"),resp.getString("Poste"),resp.getString("Telephone")});
                }
            } catch (Exception e) {
                System.err.println(e);

            }
            table_user.setModel(model);
        
    

        
    }
    
        public Administration(String Poste) {
         initComponents();
         poste=Poste;
        model.addColumn("Id");
        model.addColumn("Nom et Prénoms");
        model.addColumn("Login");
        model.addColumn("Poste");
        model.addColumn("Téléphone");
         try {

                String requete = "select *  from Employe";
                stat = conn.ObtenirConnexion().createStatement();
                resp = stat.executeQuery(requete);
                while (resp.next()) {
                   model.addRow(new Object[]{resp.getString("Id_employe"), resp.getString("Nom_employe"), resp.getString("Login"),resp.getString("Poste"),resp.getString("Telephone")});
                }
            } catch (Exception e) {
                System.err.println(e);

            }
            table_user.setModel(model);
        
    

        
    }
    /**
     * Creates new form Administration
     */
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_utilisateur = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Id_employe = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        nom_utilisateur = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        login_utilisateur = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        telephone_employe = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        bout_add_user = new javax.swing.JButton();
        bout_modif_user1 = new javax.swing.JButton();
        bout_supp_user = new javax.swing.JButton();
        Retour = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_user = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jCombo_post_box = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        password_utilisateur = new javax.swing.JPasswordField();
        confirm_password = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_utilisateur.setBackground(new java.awt.Color(255, 255, 255));
        panel_utilisateur.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(0, 0, 102), new java.awt.Color(51, 0, 153)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel5.setText("GESTION DES UTILISATEURS");

        jLabel6.setText("Identifiant");

        Id_employe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Id_employeKeyTyped(evt);
            }
        });

        jLabel7.setText("Noms Prenoms");

        nom_utilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_utilisateurActionPerformed(evt);
            }
        });

        jLabel9.setText("Login");

        jLabel10.setText("Mot de Passe");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 153, Short.MAX_VALUE)
        );

        bout_add_user.setText("Ajouter");
        bout_add_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bout_add_userActionPerformed(evt);
            }
        });

        bout_modif_user1.setText("Modifier");
        bout_modif_user1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bout_modif_user1ActionPerformed(evt);
            }
        });

        bout_supp_user.setText("Supprimer");
        bout_supp_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bout_supp_userActionPerformed(evt);
            }
        });

        Retour.setText("Retour");
        Retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetourActionPerformed(evt);
            }
        });

        table_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id User", "Nom prénoms", "Login", "Poste", "Téléphone"
            }
        ));
        table_user.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(table_user);

        jLabel8.setText("Telephone");

        jCombo_post_box.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Clientele", "Caisse", "Chef Agence", " " }));

        jLabel11.setText("Poste");

        jLabel12.setText("Confirmation");

        confirm_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm_passwordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_utilisateurLayout = new javax.swing.GroupLayout(panel_utilisateur);
        panel_utilisateur.setLayout(panel_utilisateurLayout);
        panel_utilisateurLayout.setHorizontalGroup(
            panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_utilisateurLayout.createSequentialGroup()
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(telephone_employe, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_utilisateurLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
            .addGroup(panel_utilisateurLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Id_employe)
                    .addComponent(nom_utilisateur)
                    .addComponent(login_utilisateur)
                    .addComponent(jCombo_post_box, 0, 225, Short.MAX_VALUE)
                    .addComponent(password_utilisateur)
                    .addComponent(confirm_password))
                .addGap(40, 40, 40)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addComponent(bout_add_user, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(bout_supp_user, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addComponent(bout_modif_user1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(Retour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_utilisateurLayout.setVerticalGroup(
            panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_utilisateurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Id_employe, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nom_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(login_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCombo_post_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bout_add_user, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bout_supp_user, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bout_modif_user1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Retour, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm_password, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_utilisateurLayout.createSequentialGroup()
                        .addGroup(panel_utilisateurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telephone_employe, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(panel_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nom_utilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_utilisateurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nom_utilisateurActionPerformed

    private void bout_add_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bout_add_userActionPerformed
        String cmp1 = new String(confirm_password.getPassword());
        String mdp = new String(password_utilisateur.getPassword());
        if (jCombo_post_box.getSelectedItem().toString()==" " || nom_utilisateur.getText().isEmpty() || login_utilisateur.getText().isEmpty()|| password_utilisateur.getText().isEmpty() )
        {
            JOptionPane.showMessageDialog(null, "veuillez remplir tous les champs");
        } else {
            
            if (!mdp.equals(cmp1)){
                JOptionPane.showMessageDialog(null, "Le mot de passe et la confirmation ne sont pas identiques");
            }else{
            
            String Telephone = telephone_employe.getText();
            String poste = jCombo_post_box.getSelectedItem().toString();
            String name = nom_utilisateur.getText();
            String log = login_utilisateur.getText();
            

            String requet = "insert into Employe ('Nom_employe', 'Login', 'Password','Poste', 'Telephone') values( '" + name + "','"+ log +"','"+ password_utilisateur.getText() +"','"+ poste +"','"+ Telephone +"')";
            try {
                stat = conn.ObtenirConnexion().createStatement();
                stat.executeUpdate(requet);
                //vide tous les champs apres le insert
                telephone_employe.setText(" ");
                nom_utilisateur.setText(" ");
                login_utilisateur.setText(" ");
                password_utilisateur.setText("");
                confirm_password.setText("");
                jCombo_post_box.setSelectedItem(" ");
                JOptionPane.showMessageDialog(null, " enregistré avec succes ");
                //actualise la table apres le insert
                model.setRowCount(0);
                String requete = ("select Id_employe, Nom_employe, Login, Poste, Telephone from Employe");
                resp = stat.executeQuery(requete);
                ResultSetMetaData metadata = resp.getMetaData();
                while (resp.next()) {
                   model.addRow(new Object[]{resp.getString("Id_employe"), resp.getString("Nom_employe"), resp.getString("Login"),resp.getString("Poste"),resp.getString("Telephone")});

                }
                table_user.setModel(model);
            } catch (SQLException ex) {
                System.out.println(ex);
            } finally{

                try {
                    stat.close();
                    resp.close();

                }catch (Exception e){ }
            }
        }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_bout_add_userActionPerformed

    private void bout_modif_user1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bout_modif_user1ActionPerformed
        // UPDATE SET
        
        if (Id_employe.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Veuillez choisir id  et entrer les information à modifier");
        } else {
             String cmp1 = new String(confirm_password.getPassword());
             String mdp = new String(password_utilisateur.getPassword());
             String poste = jCombo_post_box.getSelectedItem().toString();
            try {
                if (JOptionPane.showConfirmDialog(null, "Confirmer la modification", "modification", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                   if (!mdp.equals(cmp1)){
                JOptionPane.showMessageDialog(null, "Le mot de passe et la confirmation ne sont pas identiques");
            }else{
                    stat.executeUpdate("update Employe set Nom_employe='" + nom_utilisateur.getText() + "',login='" + login_utilisateur.getText() +"',Password='" + password_utilisateur.getText() +"', Poste='"+poste+"', Telephone='" + telephone_employe.getText() +"'"
                        + "where Id_employe='" + Id_employe.getText() + "'");
                    //vide les champs apres update
                    Id_employe.setText(" ");
                    nom_utilisateur.setText(" ");

                    login_utilisateur.setText(" ");
                    telephone_employe.setText(" ");
                     password_utilisateur.setText("");
                    confirm_password.setText("");
                    jCombo_post_box.setSelectedItem(" ");
                    model.setRowCount(0);
                    String requete = "select * from Employe";
                    stat = conn.ObtenirConnexion().createStatement();
                    resp = stat.executeQuery(requete);
                    ResultSetMetaData metadata = resp.getMetaData();
                    while (resp.next()) {
                        model.addRow(new Object[]{resp.getString("Id_employe"), resp.getString("Nom_employe"),
                            resp.getString("Login"), resp.getString("Poste"), resp.getString("Telephone")});
                }
                   
                JOptionPane.showMessageDialog(null, "Modification réussie");
            }
                
            table_user.setModel(model);
                }   
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "erreur de modification !!!! " + e.getMessage());
            System.out.println(e);
        }finally{

            try {
                stat.close();
                resp.close();

            }catch (Exception e){ }
        }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_bout_modif_user1ActionPerformed

    private void bout_supp_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bout_supp_userActionPerformed
        if (Id_employe.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Veuillez remplir le champ id ");
        } else {
            try {

                if (JOptionPane.showConfirmDialog(null, "Attention etes vous sûr de  vouloir supprimer ce client???", "supprimer client", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    if (Id_employe.getText().length() != 0) {
                        stat.executeUpdate("delete from Employe where Id_employe=" + Id_employe.getText() + "");
                        JOptionPane.showMessageDialog(null, "Utilisateur supprimé avec succes!");
                        // vide les champs apres delete
                        Id_employe.setText(" ");
                        nom_utilisateur.setText(" ");
                        login_utilisateur.setText(" ");
                        telephone_employe.setText(" ");

                        //actualise la table apres le delete
                        model.setRowCount(0);
                        String requete = "select *  from Employe";
                        stat = conn.ObtenirConnexion().createStatement();
                        resp = stat.executeQuery(requete);
                        ResultSetMetaData metadata = resp.getMetaData();
                        while (resp.next()) {
                             model.addRow(new Object[]{resp.getString("Id_employe"), resp.getString("Nom_employe"),
                            resp.getString("Login"), resp.getString("Poste"), resp.getString("Telephone")});
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Le champ id doit être positif !");
                }
                table_user.setModel(model);
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "erreur de Suppression \n" + e.getMessage());
            System.out.println(e);
        }finally{

            try {
                stat.close();
                resp.close();

            }catch (Exception e){ }
        }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_bout_supp_userActionPerformed

    private void RetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetourActionPerformed
        this.setVisible(false);
        Menu menu = new Menu(poste);
        menu.setVisible(true);
        //this.jPanel1_authentification.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_RetourActionPerformed

    private void confirm_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirm_passwordActionPerformed

    private void Id_employeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Id_employeKeyTyped
        try {
            // TODO add your handling code here:
           
            String requete = "select * from Employe where Id_employe='"+Id_employe.getText()+"'";
            
            stat=conn.ObtenirConnexion().createStatement();
            resp=stat.executeQuery(requete);
            while(resp.next()){
                nom_utilisateur.setText(resp.getString("Nom_employe"));
                login_utilisateur.setText(resp.getString("Login"));
                telephone_employe.setText(resp.getString("Telephone"));
                jCombo_post_box.setSelectedItem(resp.getString("Poste"));
            
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Administration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Id_employeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Id_employe;
    private javax.swing.JButton Retour;
    private javax.swing.JButton bout_add_user;
    private javax.swing.JButton bout_modif_user1;
    private javax.swing.JButton bout_supp_user;
    private javax.swing.JPasswordField confirm_password;
    private javax.swing.JComboBox jCombo_post_box;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField login_utilisateur;
    private javax.swing.JTextField nom_utilisateur;
    private javax.swing.JPanel panel_utilisateur;
    private javax.swing.JPasswordField password_utilisateur;
    private javax.swing.JTable table_user;
    private javax.swing.JTextField telephone_employe;
    // End of variables declaration//GEN-END:variables
}
